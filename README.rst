
==========
PyGeodesy3
==========

A pure Python implementation of ``geodesy`` tools for various ellipsoidal and
spherical earth models using precision trigonometric, vector-based, exact,
elliptic, iterative and approximate methods for geodetic (lat-/longitude),
geocentric (ECEF_ cartesian) and certain `triaxial ellipsoidal`_ coordinates,
supported *only on Python 3.7 or newer*.

Transcoded from `JavaScript originals`_ by *Chris Veness (C) 2005-2022* and from
several `C++ classes`_ by *Charles F.F. Karney (C) 2008-2023* and published under
the same `MIT License`_.

There are four modules for ellipsoidal earth models, *ellipsoidal.exact*, *.karney*,
*.vincenty* and *.nvector* and two for spherical ones, *spherical.trigonometry* and
*.nvector*.  Each module provides a geodetic LatLon_ and a geocentric Cartesian_
class with methods and functions to compute distance, surface area, perimeter,
initial and final bearing, intermediate and nearest points, circle intersections
and secants, path intersections, `3-point resections`_, rhumb and rhumb lines,
triangulation, trilateration (by intersection, by overlap and in 3d), conversions
and unrolling, among other things.  For more information and further details see
the documentation_, the descriptions of `Latitude/Longitude`_, Vincenty_ and
`Vector-based`_ geodesy, the original `JavaScript source`_ or docs_ and *Karney*\'s
Python geographiclib_ and `C++ GeographicLib`_.

Also included are modules for conversions to and from `Cassini-Soldner`_, ECEF_
(Earth-Centered, Earth-Fixed cartesian), UTM_ (Universal Transverse Mercator and
Exact_), UPS_ (Universal Polar Stereographic) and `Web Mercator`_ (Pseudo-Mercator)
coordinates, MGRS_ (Military Grid Reference System, UTM *and* UPS) and OSGR_
(British Ordinance Survery Grid Reference) grid references, TRF_ (Terrestrial
Reference Frames) and modules to encode and decode EPSG_, Geohashes_, `Georefs
(WGRS)`_ and `Garefs (GARS)`_.

Other modules provide `Albers equal-area`_ projections, equidistant_ and other
*azimuthal* projections, Lambert *conformal conic* projections and positions,
functions to clip paths or polygons of *LatLon* points using the `Cohen-Sutherland`_,
`Forster-Hormann-Popa`_, `Greiner-Hormann`_, `Liang-Barsky`_ and `Sutherland-Hodgman`_
methods or to perform *boolean* operations between (composite) polygons, functions
to simplify_ or linearize a path of *LatLon* points (or a `numpy array`_), including
implementations of the `Ramer-Douglas-Peucker`_, `Visvalingam-Whyatt`_ and
`Reumann-Witkam`_ algorithms and modified versions of the former.  Other classes
interpolate_ the Height_ of *LatLon* points and Geoid_ models or compute distances
using Fréchet_, Hausdorff_ and various formulae.

Installation
============

To install PyGeodesy3, type ``python3 -m pip install PyGeodesy3`` or ``python3 -m
easy_install PyGeodesy3`` in a terminal or command window.

If the wheel ``PyGeodesy3-yy.m.d-py3-none-any.whl`` is missing in `PyPI Download files`_,
download the file from `GitHub/dist`_.  Install that with ``python3 -m pip install
<path-to-downloaded-wheel>`` and verify with ``python3 -m pygeodesy3``.

Alternatively, download ``PyGeodesy3-yy.m.d.zip`` from PyPI_ or GitHub_, ``unzip`` the
downloaded file, ``cd`` to directory ``PyGeodesy3-yy.m.d`` and type ``python3 setup.py
install``.

To run all PyGeodesy3 tests, type ``python3 test/run.py`` before or after installation.

Dependencies
============

Installation of *Karney*\'s Python package geographiclib_ is optional, but required
to use modules ``ellipsoidal.karney`` and ``projections.css``, ``projections.azimuthal``
classes ``EquidistantKarney`` and ``GnomonicKarney`` and the ``HeightIDWkarney``
interpolator.

Both numpy_ and scipy_ must be installed for most Geoid_ and Height_ interpolators,
except ``GeoidKarney`` and the ``HeigthIDW...`` ones.

Functions and ``LatLon`` methods ``circin6``, ``circum3``, ``circum4_``, ``soddy4``,
``trilaterate3d2`` and ``trilaterate5`` and modules ``maths.auxilats`` and ``rhumb.aux_``
require numpy_.

Modules ``ellipsoidal.solve`` and ``geodesic.solve`` and ``projections.azimuthal`` classes
``EquidistantGeodSolve`` and ``GnomonicGeodSolve`` depend on *Karney*\'s C++ utility
GeodSolve_ to be executable and set with env variable ``PYGEODESY3_GEODSOLVE`` or with
property ``Ellipsoid.geodsolve``.

To compare ``MGRS`` results from modules ``grids.mgrs`` and ``test.testMgrs`` with
*Karney*\'s C++ utility GeoConvert_, the latter must be executable and set with env
variable ``PYGEODESY3_GEOCONVERT``.

Module ``rhumb.solve`` needs *Karney*\'s C++ utility RhumbSolve_ to be executable and set
with env variable ``PYGEODESY3_RHUMBSOLVE`` or with property ``Ellipsoid.rhumbsolve``.

Documentation
=============

In addition to the ``pygeodesy3`` package, the PyGeodesy3_ `distribution files`_ contain
the tests, the test results (on macOS only) and the documentation_ generated by Epydoc_
using command line: ``epydoc --html --no-private --no-source --name=PyGeodesy3 --url=... -v pygeodesy3``.

Tests
=====

The tests ran with Python 3.12 (with geographiclib_ 2.0), 3.11.5 (with geographiclib_ 2.0,
numpy_ 1.24.2 and scipy_ 1.10.1), Python 3.10.8 (with geographiclib_ 2.0, numpy_ 1.23.3,
scipy_ 1.9.1, GeoConvert_ 2.2, GeodSolve_ 2.2 and RhumbSolve_ 2.2) and Python 3.9.6, all
on macOS 14.1.2 Sonoma, Apple M1 Silicon (``arm64``), *natively* and in 64-bit only.

All tests ran with ``lazy import`` enabled and with command line option ``-W default`` and
env variable ``PYGEODESY_WARNINGS=on``.  The results of those tests are included in the
distribution files.

Test coverage has been measured with coverage_ 7.2.2.  The complete coverage report in HTML
and a PDF summary are included in the distribution files.

The tests also ran with Python 3.11.5 (and geographiclib_ 2.0) on `Debian 11`_ in 64-bit
only and with Python 3.11.5 and 3.10.10 (all with geographiclib_ 1.52) on `Windows 10`_
in 64- and/or 32-bit.

Notes
=====

All Python source code has been statically checked_ with PyChecker_, PyFlakes_, PyCodeStyle_
(formerly Pep8) and McCabe_ using Python 2.7.18 and with Flake8_ using Python 3.11.5, both
in 64-bit on macOS 14.1.2 Sonoma.

For a summary of all *Karney*-based functionality in ``pygeodesy3``, see module karney_.

*Last updated: Dec 23, 2023.*

License
=======

``Copyright (C) 2024-2024 -- mrJean1 at Gmail -- All Rights Reserved.``

``Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the "Software"),
to deal in the Software without restriction, including without limitation
the rights to use, copy, modify, merge, publish, distribute, sublicense,
and/or sell copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following conditions:``

``The above copyright notice and this permission notice shall be included
in all copies or substantial portions of the Software.``

``THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.``

.. image:: https://Img.Shields.io/pypi/pyversions/PyGeodesy3.svg?label=Python
  :target: https://PyPI.org/project/PyGeodesy3
.. image:: https://Img.Shields.io/appveyor/ci/mrJean1/PyGeodesy3.svg?branch=master&label=AppVeyor
  :target: https://CI.AppVeyor.com/project/mrJean1/PyGeodesy3/branch/master
.. image:: https://Img.Shields.io/cirrus/github/mrJean1/PyGeodesy3?branch=master&label=Cirrus
  :target: https://Cirrus-CI.com/github/mrJean1/PyGeodesy3
.. image:: https://Img.Shields.io/badge/coverage-95%25-brightgreen
  :target: https://GitHub.com/mrJean1/PyGeodesy3/blob/master/testcoverage.pdf
.. image:: https://Img.Shields.io/pypi/v/PyGeodesy3.svg?label=PyPI
  :target: https://PyPI.org/project/PyGeodesy3
.. image:: https://Img.Shields.io/pypi/wheel/PyGeodesy3.svg
  :target: https://PyPI.org/project/PyGeodesy3/#files
.. image:: https://img.shields.io/pypi/dm/PyGeodesy3
  :target: https://PyPI.org/project/PyGeodesy3
.. image:: https://Img.Shields.io/pypi/l/PyGeodesy3.svg
  :target: https://PyPI.org/project/PyGeodesy3

.. _Albers equal-area: https://GeographicLib.SourceForge.io/C++/doc/classGeographicLib_1_1AlbersEqualArea.html
.. _C++ classes: https://GeographicLib.SourceForge.io/C++/doc/annotated.html
.. _C++ GeographicLib: https://GeographicLib.SourceForge.io/C++/doc/index.html
.. _Cartesian: https://mrJean1.GitHub.io/PyGeodesy3/docs/pygeodesy3-Cartesian-attributes-table.html
.. _Cassini-Soldner: https://GeographicLib.SourceForge.io/C++/doc/classGeographicLib_1_1CassiniSoldner.html
.. _checked: https://GitHub.com/ActiveState/code/tree/master/recipes/Python/546532_PyChecker_postprocessor
.. _Cohen-Sutherland: https://WikiPedia.org/wiki/Cohen-Sutherland_algorithm
.. _coverage: https://PyPI.org/project/coverage
.. _Debian 11: https://Cirrus-CI.com/github/mrJean1/PyGeodesy3/master
.. _distribution files: https://GitHub.com/mrJean1/PyGeodesy3/tree/master/dist
.. _docs: https://www.Movable-Type.co.UK/scripts/geodesy/docs
.. _documentation: https://mrJean1.GitHub.io/PyGeodesy3
.. _ECEF: https://WikiPedia.org/wiki/ECEF
.. _EPSG: https://EPSG.org
.. _Epydoc: https://PyPI.org/project/epydoc
.. _equidistant: https://GeographicLib.SourceForge.io/C++/doc/classGeographicLib_1_1AzimuthalEquidistant.html
.. _Exact: https://GeographicLib.SourceForge.io/C++/doc/classGeographicLib_1_1GeodesicExact.html
.. _Flake8: https://PyPI.org/project/flake8
.. _Forster-Hormann-Popa: https://www.ScienceDirect.com/science/article/pii/S259014861930007X
.. _Fréchet: https://WikiPedia.org/wiki/Frechet_distance
.. _Garefs (GARS): https://WikiPedia.org/wiki/Global_Area_Reference_System
.. _GeoConvert: https://GeographicLib.SourceForge.io/C++/doc/utilities.html
.. _GeodSolve: https://GeographicLib.SourceForge.io/C++/doc/utilities.html
.. _geographiclib: https://PyPI.org/project/geographiclib
.. _Geohashes: https://www.Movable-Type.co.UK/scripts/geohash.html
.. _Geoid: https://mrJean1.GitHub.io/PyGeodesy3/docs/pygeodesy3.geoids-module.html
.. _Georefs (WGRS): https://WikiPedia.org/wiki/World_Geographic_Reference_System
.. _GitHub: https://GitHub.com/mrJean1/PyGeodesy3
.. _GitHub/dist: https://GitHub.com/mrJean1/PyGeodesy3/tree/master/dist
.. _Greiner-Hormann: http://www.inf.USI.CH/hormann/papers/Greiner.1998.ECO.pdf
.. _Hausdorff: https://WikiPedia.org/wiki/Hausdorff_distance
.. _Height: https://mrJean1.GitHub.io/PyGeodesy3/docs/pygeodesy3.heights-module.html
.. _Intel-Python: https://software.Intel.com/en-us/distribution-for-python
.. _interpolate: https://docs.SciPy.org/doc/scipy/reference/interpolate.html
.. _JavaScript originals: https://GitHub.com/ChrisVeness/geodesy
.. _JavaScript source: https://GitHub.com/ChrisVeness/geodesy
.. _John P. Snyder: https://pubs.er.USGS.gov/djvu/PP/PP_1395.pdf
.. _karney: https://mrJean1.GitHub.io/PyGeodesy3/docs/pygeodesy3.karney-module.html
.. _Latitude/Longitude: https://www.Movable-Type.co.UK/scripts/latlong.html
.. _LatLon: https://mrJean1.GitHub.io/PyGeodesy3/docs/pygeodesy3-LatLon-attributes-table.html
.. _Liang-Barsky: https://www.CS.Helsinki.FI/group/goa/viewing/leikkaus/intro.html
.. _McCabe: https://PyPI.org/project/mccabe
.. _MGRS: https://GeographicLib.SourceForge.io/C++/doc/classGeographicLib_1_1MGRS.html
.. _MIT License: https://OpenSource.org/licenses/MIT
.. _numpy: https://PyPI.org/project/numpy
.. _numpy array: https://docs.SciPy.org/doc/numpy/reference/generated/numpy.array.html
.. _OSGR: https://www.Movable-Type.co.UK/scripts/latlong-os-gridref.html
.. _3-point resections: https://WikiPedia.org/wiki/Position_resection_and_intersection
.. _PyChecker: https://PyPI.org/project/pychecker
.. _PyCodeStyle: https://PyPI.org/project/pycodestyle
.. _PyFlakes: https://PyPI.org/project/pyflakes
.. _PyGeodesy3: https://PyPI.org/project/PyGeodesy3
.. _pygeodesy3.machine: https://mrJean1.GitHub.io/PyGeodesy3/docs/pygeodesy3.interns-module.html#machine
.. _PyPI: https://PyPI.org/project/PyGeodesy3
.. _PyPI Download files: https://PyPI.org/project/PyGeodesy3/#files
.. _PyPy: https://formulae.brew.sh/formula/pypy3.10
.. _Pythonista: https://OMZ-Software.com/pythonista
.. _Ramer-Douglas-Peucker: https://WikiPedia.org/wiki/Ramer-Douglas-Peucker_algorithm
.. _Reumann-Witkam: https://psimpl.SourceForge.net/reumann-witkam.html
.. _RhumbSolve: https://GeographicLib.SourceForge.io/C++/doc/utilities.html
.. _scipy: https://PyPI.org/project/scipy
.. _simplify: https://Bost.Ocks.org/mike/simplify
.. _Sutherland-Hodgman: https://WikiPedia.org/wiki/Sutherland-Hodgman_algorithm
.. _TRF: http://ITRF.ENSG.IGN.FR
.. _triaxial ellipsoidal: https://GeographicLib.SourceForge.io/1.44/triaxial.html
.. _Ubuntu 16.04: https://Travis-CI.com/mrJean1/PyGeodesy3
.. _UPS: https://WikiPedia.org/wiki/Universal_polar_stereographic_coordinate_system
.. _UTM: https://www.Movable-Type.co.UK/scripts/latlong-utm-mgrs.html
.. _Vector-based: https://www.Movable-Type.co.UK/scripts/latlong-vectors.html
.. _Vincenty: https://www.Movable-Type.co.UK/scripts/latlong-vincenty.html
.. _Visvalingam-Whyatt: https://hydra.Hull.ac.UK/resources/hull:8338
.. _Web Mercator: https://WikiPedia.org/wiki/Web_Mercator
.. _Windows 10: https://CI.AppVeyor.com/project/mrJean1/pygeodesy3
